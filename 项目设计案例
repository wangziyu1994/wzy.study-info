#A.秒杀系统设计





#B.抢红包系统设计

## 1.如果红包群，人数较小的话，再100人之内。

采用MySQL  

解决方案：用户发红包。数据库直接生成一个小红包。初始状态为未抢到。当用户来抢红包。update红包流水状态。

1笔抢红包交易耗时20ms 那么100笔 2s也能满足用户需求





##2.如果红包群，人数上升的话，达到1000人。

20ms *1000 等于20s那么不满足用户需求

解决方案：用户发红包。数据库提前按群人数分配好金额生成一个个小红包。初始状态为未抢到。

数据一个行锁变成1000个行锁。空间换时间。也能实现。



## 3.如果红包群，人数继续上升的话达到万级别。

数据库并发量达到瓶颈。

解决方案：使用Redis 缓存。redis中生成红包 信息。之后发送消息到MQ异步同步到数据库。

每台Redis处理10w.



#### a.如何保证redis与数据库的双写一致性。

使用RocketMQ的事务消息。

redis成功。给broker Message.commit

redis失败。给broker  Message.rollback

redis未明。给broker Message.unknown  broker下次会继续查询本地事务状态。16次之后进入死信队列。





#### b.如何过滤重复抢红包？

对于已经抢过的用户，放入本地JVM。再来抢式。直接不查询redis.直接过滤掉。





# C.如何压测？



